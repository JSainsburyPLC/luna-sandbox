/// Takes a string that maps to a corresponding key in the
/// [`$ln-font-keys`](https://github.com/JSainsburyPLC/luna/tree/master/variables/Style#typography)
/// map.
///
/// The mixin returns the generated font stack (size, family, weight, line-height) that is mapped
/// to that key. This mixin is primarily used to define headings.  If an unknown key is passed in
/// a warning will be logged to the terminal.
/// @group mixins
/// @param {String} $ln-font - font key existing in `$ln-font-keys` map.
/// @example scss - Example input
///   h1 {
///     @include ln-font('h1');
///   }
///
/// @example css - Example output
///   h1 {
///     line-height: 1.1;
///     font-family: MaryAnn, serif;
///     font-weight: 700;
///     font-size: 40px;
///   }
///
///   @media (min-width: 461px) {
///     h1 {
///       font-size: 40px;
///     }
///   }
///
///   @media (min-width: 721px) {
///     h1 {
///       font-size: 70px;
///     }
///   }
@mixin ln-font($ln-font) {
  @if map-has-key($ln-fonts, $ln-font) {
    font-family: nth(map-get($ln-fonts, $ln-font), 3);
    font-weight: nth(map-get($ln-fonts, $ln-font), 4);
    line-height: nth(map-get($ln-fonts, $ln-font), 2);

    @include ln-font-size($ln-font);
  }

  @else {
    @warn 'Unfortunately, no value could be retrieved from `#{$ln-font}`. '
      + 'Please make sure it is defined in `$ln-fonts` map.';
  }
}

// Uses ln-build-fonts-map function to generate a map with all of the typography maps listed above nested within, used
// fot generating headlines to match up with the Luna styleguide.
$ln-fonts: ln-build-fonts-map($ln-font-keys);
